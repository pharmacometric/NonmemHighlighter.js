class NonmemHighlighter{constructor(e={}){this.theme=e.theme||"light",this.showLineNumbers=e.lineNumbers||!1,this.styles={light:`
        .nonmem-code { background: #fdfdfd; color: #000; padding: 1em; font-family: monospace; white-space: pre; display: block; overflow-x: auto; }
        .nonmem-keyword { color: #0077aa; font-weight: bold; }
        .nonmem-function { color: #9b59b6; }
        .nonmem-operator { color: #e74c3c; }
        .nonmem-comment { color: #7f8c8d; font-style: italic; }
        .nonmem-constant { color: #d35400; }
        .nonmem-number { color: #27ae60; }
        .nonmem-line-number { color: #aaa; padding-right: 10px; user-select: none; }
      `,dark:`
        .nonmem-code { background: #1e1e1e; color: #ccc; padding: 1em; font-family: monospace; white-space: pre; display: block; overflow-x: auto; }
        .nonmem-keyword { color: #56b6c2; font-weight: bold; }
        .nonmem-function { color: #c678dd; }
        .nonmem-operator { color: #e06c75; }
        .nonmem-comment { color: #5c6370; font-style: italic; }
        .nonmem-constant { color: #d19a66; }
        .nonmem-number { color: #98c379; }
        .nonmem-line-number { color: #555; padding-right: 10px; user-select: none; }
      `},this.injectStyles()}injectStyles(){document.getElementById("nonmem-theme-style")&&document.getElementById("nonmem-theme-style").remove();let e=document.createElement("style");e.id="nonmem-theme-style",e.innerHTML=this.styles[this.theme],document.head.appendChild(e)}setTheme(e){["light","dark"].includes(e)&&(this.theme=e,this.injectStyles())}highlight(e){let n=e.replace(/</g,"&lt;").replace(/>/g,"&gt;");if(n=(n=(n=(n=(n=(n=n.replace(/;.*$/gm,e=>`<span class="nonmem-comment">${e}</span>`)).replace(/\b(\$[A-Z]+)\b/g,e=>`<span class="nonmem-keyword">${e}</span>`)).replace(/\b(EXP|LOG|IF|THEN|ELSE|ABS|SQRT|SIN|COS|TAN)\b(?=\()/g,e=>`<span class="nonmem-function">${e}</span>`)).replace(/(ETA\(\d+\)|THETA\(\d+\)|ERR\(\d+\))/g,e=>`<span class="nonmem-constant">${e}</span>`)).replace(/([=+\-*/^])/g,e=>`<span class="nonmem-operator">${e}</span>`)).replace(/\b\d+\.\d+\b|\b\d+\b/g,e=>`<span class="nonmem-number">${e}</span>`),this.showLineNumbers){let o=n.split("\n");n=o.map((e,n)=>`<span class="nonmem-line-number">${String(n+1).padStart(3)}.</span>${e}`).join("\n")}return`<code class="nonmem-code">${n}</code>`}highlightElement(e){let n=document.querySelectorAll(e);n.forEach(e=>{let n=e.textContent;e.innerHTML=this.highlight(n)})}observe(e){let n=document.querySelector(e);if(!n)return;let o=new MutationObserver(()=>{this.highlightElement(e+" code")});o.observe(n,{childList:!0,subtree:!0})}}"undefined"!=typeof module&&(module.exports=NonmemHighlighter);
